trigger:
  branches:
    include:
      - main

pool: Laptop

variables:
  buildConfiguration: 'Release'
  projectSolution: '**/IT_Hardware.sln'
  publishDir: '$(Build.ArtifactStagingDirectory)/publish'

stages:
# ------------------------------
# 1. Build & Test + SonarCloud
# ------------------------------
- stage: BuildAndTest
  displayName: "Build, Test & SonarCloud"
  jobs:
  - job: Build
    steps:
      # Code Checkout
      - checkout: self

      # Ensure correct .NET SDK is installed (important!)
      - task: UseDotNet@2
        displayName: "Use .NET Core SDK 8.0.x"
        inputs:
          packageType: 'sdk'
          version: '8.0.x'
          installationPath: $(Agent.ToolsDirectory)/dotnet

      # Check which SDK is actually in use
      - script: dotnet --info
        displayName: "Check .NET SDK Version"

      # Dependency Installation
      - task: NuGetToolInstaller@1

      #- task: NuGetCommand@2
      #  inputs:
      #    restoreSolution: '$(projectSolution)'

      - task: DotNetCoreCLI@2
        displayName: "Restore with dotnet"
        inputs:
          command: 'restore'
          projects: '$(projectSolution)'

      # SonarCloud Prepare
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'SonarAzure'   # Configure in Service Connections
          organization: 'hrisikeshkumar'              # e.g., hriskumar
          scannerMode: 'MSBuild'
          projectKey: 'hrisikeshkumar_azuredevops'
          projectName: 'AzureDevops'

      # Build
      - task: DotNetCoreCLI@2
        displayName: "Build"
        inputs:
          command: 'build'
          projects: '$(projectSolution)'
          arguments: '--configuration $(buildConfiguration)'

      # Unit Tests
      - task: DotNetCoreCLI@2
        displayName: "Run Tests"
        inputs:
          command: 'test'
          projects: '**/*Tests.csproj'
          arguments: '--configuration $(buildConfiguration) --no-build'

      # SonarCloud Analyze
      - task: SonarCloudAnalyze@1

      # SonarCloud Publish
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'

# ------------------------------
# 2. Package & Publish Artifacts
# ------------------------------
- stage: Package
  displayName: "Package & Publish"
  dependsOn: BuildAndTest
  jobs:
  - job: PackageJob
    steps:
      - task: DotNetCoreCLI@2
        displayName: "Publish"
        inputs:
          command: 'publish'
          projects: '$(projectSolution)'
          arguments: '--configuration $(buildConfiguration) --output $(publishDir)'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(publishDir)'
          artifactName: 'drop'
          publishLocation: 'Container'

# ------------------------------
# 3. Deploy to Azure (staging)
# ------------------------------
- stage: Deploy
  displayName: "Deploy to Azure App Service"
  dependsOn: Package
  jobs:
  - deployment: DeployWeb
    environment: 'staging'   # ðŸ‘ˆ FIXED (completed string)
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                artifactName: 'drop'
                downloadPath: '$(Pipeline.Workspace)'

            - task: AzureWebApp@1
              displayName: 'Deploy to Azure WebApp (Staging)'
              inputs:
                azureSubscription: 'Azure_RG'
                appName: 'rajaicsi'
                package: '$(Pipeline.Workspace)/drop'

